substitutions:
  device_name: "candeeiro" #nome do MCU
  friendly_name: "Candeeiro" #nome amigavel do MCU
  device_location: "Sala de estar" # lugar onde está instalado
  device_extras: "LEDs RGB enderessaveis com temperatura e Humidade" # descriçao das funçoes extras do MCU
  device_description: ${friendly_name} - ${device_location} - ${device_extras} # descriçao do MCU
  
<<: !include include/dados.yaml

esphome:
  name: '${device_name}'
  comment: '${device_description}'
  build_path: ./projectos/${friendly_name} - ${device_location}
  platform: ESP8266
  board: d1_mini
  includes:
  - include/my_switch.h

# Enable logging 
# DEBUG or null - (Default) - Color: cyan; 
# INFO - errors, warnings and info - Color: green;
# VERBOSE - Like debug, but a few more messages - Color: grey
# WARN - warnings and errors are logged - Color: yellow
logger:
  level: info
  
# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key_candeeiro
ota:
  password: !secret ota_password_candeeiro

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.1.118
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: !secret dns1_ip
    dns2: !secret dns2_ip
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid_candeeiro
    password: !secret wifi_ap_password

captive_portal:

switch:
  - platform: template
    name: ${friendly_name} - ${device_location} Botão
    id: candeeiro_led_switch
    optimistic: true
    turn_on_action:
      - if:
          condition:
            light.is_off: candeeiro_led_rgb
          then:
            - light.turn_on:
                id: candeeiro_led_rgb
                effect: "Wipe In"
                red: 100%
                green: 100%
                blue: 100%
                brightness: 50%
    on_turn_on:
    - logger.log: ${friendly_name} - ${device_location} "Ligado!"
    turn_off_action:
      - if:
          condition:
            light.is_on: candeeiro_led_rgb
          then:
            - light.turn_on:
                id: candeeiro_led_rgb
                effect: "Wipe Out"
            - delay: 1550ms
            - light.turn_off: candeeiro_led_rgb
    on_turn_off:
    - logger.log: ${friendly_name} - ${device_location} "Desligado!"

# switch:
  - platform: custom
    lambda: |-
      auto my_custom_switch = new MyCustomSwitch();
      App.register_component(my_custom_switch);
      return {my_custom_switch};

    switches:
      name: "Wall Switch"


light:  #### 46 LEDs enderessaveis RGB WS2811
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO3 # Pino RX cor verde
    num_leds: 46
    name: ${friendly_name} - ${device_location} - NeoPixel Light
    id: candeeiro_led_rgb
    effects:
### addressable_wipe In        
      - addressable_lambda:
          name: "Wipe In"
          update_interval: 1ms
          lambda: |-
            static int x = 0;
            if (initial_run) {
              x = 0;
              it.all() = ESPColor(0,0,0);
            }
            if (x < it.size()) {
              it[x] = current_color;
              x += 1;
            }
### addressable_wipe Out
      - addressable_lambda:
          name: "Wipe Out"
          update_interval: 30ms
          lambda: |-
            static int x = 0;
            if (initial_run) {
              x = it.size();
            }
            if (x > 0) {
              x -= 1;
              it[x] = ESPColor(0,0,0);
            }      
### addressable_lento IN  Blue          
      - addressable_lambda:
          name: "Azul IN"
          update_interval: 2ms
          lambda: |-
            static int x = 0;
            if (initial_run) {
              x = 0;
              it.all() = ESPColor(0,0,0);
            }
            if (x < it.size()) {
              it[x] = ESPColor(0,0,255);
              x += 1;
            }

### addressable_color_wipe
      - addressable_color_wipe:
      - addressable_color_wipe:
          name: Color Wipe Effect
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
          add_led_interval: 100ms
          reverse: true #false
##  addressable_scan         
      - addressable_scan: 
      - addressable_scan:
          name: Scan Effect
          move_interval: 100ms 
          scan_width: 1
      - addressable_scan:
          name: Scan Effect 2
          move_interval: 50ms 
          scan_width: 5
## Slow Random
      - random:
          name: "Slow Random"
          transition_length: 10s
          update_interval: 10s
## Fast Random          
      - random:
          name: "Fast Random"
          transition_length: 4s
          update_interval: 5s
## addressable_rainbow          
      - addressable_rainbow:
          name: Rainbow
          speed: 10
          width: 50
## addressable_twinkle          
      - addressable_twinkle:
          name: Twinkle Effect
          twinkle_probability: 5%
          progress_interval: 4ms
## addressable_random_twinkle          
      - addressable_random_twinkle:
          name: Random Twinkle
          twinkle_probability: 5%
          progress_interval: 32ms
## addressable_fireworks          
      - addressable_fireworks:
          name: Fireworks
          update_interval: 32ms
          spark_probability: 10%
          use_random_color: true #false
          fade_out_rate: 120
## dressable_flicker
      - addressable_flicker:
      - flicker:
      - flicker:
          name: Flicker Effect
          alpha: 95%
          intensity: 1.5%
## Pulse          
      - pulse:
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
      - pulse:
          name: "Slow Pulse"
          transition_length: 1s      # defaults to 1s
          update_interval: 2s
## Strobe RGB         
      - strobe:
      - strobe:
          name: Strobe Effect RGB
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 0%
              blue: 0%
              duration: 300ms
            - state: false
              duration: 200ms
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 300ms
            - state: false
              duration: 200ms
            - state: true
              brightness: 100%
              red: 0%
              green: 0%
              blue: 100%
              duration: 300ms
            - state: false
              duration: 200ms
## Strobe Vermelho        
#      - strobe:
      - strobe:
          name: Strobe Effect Vermelho
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 0%
              blue: 0%
              duration: 300ms
            - state: false
              duration: 200ms
## Strobe Verde        
#      - strobe:
      - strobe:
          name: Strobe Effect Verde
          colors:
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 300ms
            - state: false
              duration: 200ms
## Strobe Azul        
      - strobe:
          name: Strobe Effect Azul
          colors:
            - state: true
              brightness: 100%
              red: 0%
              green: 0%
              blue: 100%
              duration: 300ms
            - state: false
              duration: 200ms
                 
# Detector de presença LD2410B usando Binary-output
binary_sensor:
  - platform: gpio
    pin: GPIO13  # Detector de presença LD2410B 5V  
    name: ${friendly_name} - ${device_location} movimento
    device_class: motion     

sensor:
  - platform: dht
    pin: GPIO12  # Sensor de temperatura e Humidade Sonoff Si7021 3,3V 
    temperature:
      name: ${friendly_name} - ${device_location} Temperatura
    humidity:
      name: ${friendly_name} - ${device_location} Humidade"
    update_interval: 60s
    model: Si7021       

# Diagnosticos
  - platform: uptime # Reporta o tempo de actividade online
    name: ${friendly_name} - ${device_location} Tempo Online
    icon: mdi:timeline-clock
    filters:
      - lambda: return x / 3600.0;
    unit_of_measurement: "horas"
    accuracy_decimals: 2 

  - platform: wifi_signal # Reporta a força do sinal WiFi em dB
    name: ${friendly_name} - ${device_location} Sinal WiFi dB
    id: wifi_signal_db
    update_interval: 60s

  - platform: copy # Reporta a força do sinal WiFi em %
    source_id: wifi_signal_db
    name: ${friendly_name} - ${device_location} Sinal WiFi %
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: " %"
    
