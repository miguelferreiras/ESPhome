substitutions:
  device_name: "shelly-1pm" #nome do MCU
  friendly_name: "Shelly 1PM" #nome amigavel do MCU
  device_location: "Quarto" # lugar onde está instalado
  device_extras: "Iluminaçao do tecto" # descriçao das funçoes extras do MCU
  device_description: ${friendly_name} - ${device_location} - ${device_extras} # descriçao do MCU
  update_interval_wifi: "120s"
  max_temp: "70.0"

# <<: !include include/dados.yaml

esphome:
  name: '${device_name}'
  comment: '${device_description}'
  build_path: ./projectos/${friendly_name} - ${device_location}
  platform: ESP8266
  board: esp01_1m


# Enable logging 
# DEBUG or null - (Default) - Color: cyan; 
# INFO - errors, warnings and info - Color: green;
# VERBOSE - Like debug, but a few more messages - Color: grey
# WARN - warnings and errors are logged - Color: yellow
logger:
  level: INFO
  
# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key_shelly1
ota:
  password: !secret ota_password_shelly1

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.1.130
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: !secret dns1_ip
    dns2: !secret dns2_ip
  power_save_mode: HIGH # for ESP8266 LOW/HIGH are mixed up, esphome/issues/issues/1532

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} Fallback"
    password: !secret wifi_ap_password


time:
  - platform: homeassistant
    id: homeassistant_time


captive_portal:
  
switch:
  - platform: gpio
    name: ${device_name}
    pin: GPIO15
    id: shelly_relay
    restore_mode: RESTORE_DEFAULT_OFF
  
sensor:
  - platform: wifi_signal
    name: "${device_name} WiFi Signal"
    device_class: signal_strength
    update_interval: 60s
  - platform: hlw8012
    cf_pin: GPIO05
    cf1_pin: GPIO13 # not used because it is not available on the 1PM but it is needed to compile
    sel_pin: GPIO14 # not used because it is not available on the 1PM but it is needed to compile
    power:
      name: "${device_name} potencia"
      unit_of_measurement: W
      id: "shelly1pm_power"
      device_class: power
      state_class: measurement
      accuracy_decimals: 0
      filters:
        # Map from sensor -> measured value
      - calibrate_linear:
          - 0.0 -> 1.0
          - 110.33186 -> 20.62
          - 131.01909 -> 24.32
          - 341.33920 -> 62.08
          - 5561.41553 -> 1000.0
          - 2975.51221 -> 535.7
          - 9612.66309 -> 1720.0
          - 14891.35352 -> 2679.0
        # Make everything below 2W appear as just 0W.
      - lambda: if (x < 2) return 0; else return x;
    update_interval: 10s
  
  - platform: total_daily_energy
    name: "${device_name} energia diaria"
    power_id: "shelly1pm_power"
    device_class: energy
    state_class: measurement
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
  
  - platform: ntc
    sensor: temp_resistance_reading
    name: "${device_name} temperatura"
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    device_class: temperature
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: ${max_temp}
        then:
          - homeassistant.event:
              event: esphome.overheat
              data:
                title: "${device_name} está em sobre aquecimento."
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0
#############

# Diagnosticos
  - platform: uptime # Reporta o tempo de actividade online
    name: ${friendly_name} - Tempo Online
    icon: mdi:timeline-clock
    filters:
      - lambda: return x / 3600.0;
    unit_of_measurement: "horas"
    accuracy_decimals: 2 

  - platform: wifi_signal # Reporta a força do sinal WiFi em dB
    name: ${friendly_name} - Sinal WiFi dB
    id: wifi_signal_db
    update_interval: ${update_interval_wifi}

  - platform: copy # Reporta a força do sinal WiFi em %
    source_id: wifi_signal_db
    name: ${friendly_name} - Sinal WiFi %
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: " %"


#############
output:
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO00
      inverted: true
  
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
    filters:
      - delayed_on_off: 50ms # debouncing
    name: "Switch ${device_name}"
    on_state:
      then:
        - switch.toggle: shelly_relay
    internal: true
    id: switchid

#############
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} Endereço IP
      icon: mdi:ip-network

    ssid:
      name: ${friendly_name} Rede Wi-Fi
      icon: mdi:wifi

    mac_address:
      name: ${friendly_name} MAC
      icon: mdi:lan-connect

